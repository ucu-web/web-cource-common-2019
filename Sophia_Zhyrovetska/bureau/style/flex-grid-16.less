@import "variables";

@grid-columns-number: 16;
@grid-width: 1344px;
@cell-width: 66px;
@cell-padding: (
  (@grid-width - (@cell-width * @grid-columns-number)) / @grid-columns-number
);
@border-width: 1px;

.Grid {
  width: @grid-width;
  margin: 0 auto;

  &__row {
    display: flex;
    flex-wrap: wrap;
  }

  &__cell {

    .generate-columns(@grid-columns-number; @cell-width; @cell-padding; @i:1)
      when
      (@i <= @grid-columns-number) {
      .generate-columns(
        @grid-columns-number; @cell-width; @cell-padding; (@i + 1)
      );
      &_@{i} {
        width: @cell-width * @i + (@cell-padding * (@i - 1));
        padding: 0 @cell-padding / 2;
      }
    }
    .generate-columns(@grid-columns-number; @cell-width; @cell-padding;);

    .generate-push(@grid-columns-number; @cell-width; @cell-padding; @i:1)
      when
      (@i < @grid-columns-number) {
      .generate-push(@grid-columns-number; @cell-width; @cell-padding; (@i + 1));
      &_push-@{i} {
        padding-left: @cell-width * @i + (@cell-padding * (@i - 1)) + @cell-padding;
      }
    }
    .generate-push(@grid-columns-number; @cell-width; @cell-padding;);

    &_ribbed{
      border-top: @border-width solid @text-underline-color;
      border-right: @border-width solid @text-underline-color;
      padding-right: @cell-padding/2 - @border-width;

      &--rightmost{
        border-right: none;
      }
    }
  }
}
